openapi: 3.0.0
info:
  title: API Clínica
  description: API para gerenciamento de clínica médica
  version: 1.0.0
servers:
  - url: http://localhost/api_clinica/public
    description: Servidor local

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro
    
    Usuario:
      type: object
      properties:
        id:
          type: integer
          description: ID do usuário
        nome:
          type: string
          description: Nome do usuário
        email:
          type: string
          description: Email do usuário
        tipo:
          type: string
          enum: [admin, profissional]
          description: Tipo do usuário
        created_at:
          type: string
          format: date-time
          description: Data de criação
        updated_at:
          type: string
          format: date-time
          description: Data de atualização
    
    Clinica:
      type: object
      properties:
        id:
          type: integer
          description: ID da clínica
        nome:
          type: string
          description: Nome da clínica
        endereco:
          type: string
          description: Endereço da clínica
        telefone:
          type: string
          description: Telefone da clínica
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Profissional:
      type: object
      properties:
        id:
          type: integer
          description: ID do profissional
        usuario_id:
          type: integer
          description: ID do usuário associado
        especialidade_id:
          type: integer
          description: ID da especialidade
        crm:
          type: string
          description: CRM do profissional
        nome:
          type: string
          description: Nome do profissional
        especialidade:
          type: string
          description: Nome da especialidade
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Procedimento:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        descricao:
          type: string
        duracao:
          type: integer
          description: Duração em minutos
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Especialidade:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        descricao:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Agendamento:
      type: object
      properties:
        id:
          type: integer
        profissional_id:
          type: integer
        clinica_id:
          type: integer
        procedimento_id:
          type: integer
        paciente_nome:
          type: string
        paciente_telefone:
          type: string
        data_agendamento:
          type: string
          format: date
        hora_inicio:
          type: string
          format: time
        hora_fim:
          type: string
          format: time
        status:
          type: string
          enum: [agendado, confirmado, cancelado, realizado]
        observacoes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    HorarioDisponivel:
      type: object
      properties:
        hora_inicio:
          type: string
          format: time
        hora_fim:
          type: string
          format: time

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      security: []
      tags:
        - Autenticação
      summary: Login de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                senha:
                  type: string
      responses:
        '200':
          description: Login bem sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /usuarios:
    get:
      tags:
        - Usuários
      summary: Lista todos os usuários
      description: Requer autenticação como admin
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      tags:
        - Usuários
      summary: Cria um novo usuário
      description: Requer autenticação como admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nome
                - email
                - senha
                - tipo
              properties:
                nome:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                tipo:
                  type: string
                  enum: [admin, profissional]
      responses:
        '201':
          description: Usuário criado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /usuarios/{id}:
    put:
      tags:
        - Usuários
      summary: Atualiza um usuário
      description: Requer autenticação como admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                tipo:
                  type: string
                  enum: [admin, profissional]
      responses:
        '200':
          description: Usuário atualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      tags:
        - Usuários
      summary: Remove um usuário
      description: Requer autenticação como admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuário removido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /clinicas:
    get:
      tags:
        - Clínicas
      summary: Lista todas as clínicas
      responses:
        '200':
          description: Lista de clínicas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Clinica'
    
    post:
      tags:
        - Clínicas
      summary: Cria uma nova clínica
      description: Requer autenticação como admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nome
                - endereco
                - telefone
              properties:
                nome:
                  type: string
                endereco:
                  type: string
                telefone:
                  type: string
      responses:
        '201':
          description: Clínica criada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer

  /profissionais:
    get:
      tags:
        - Profissionais
      summary: Lista todos os profissionais
      responses:
        '200':
          description: Lista de profissionais
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profissional'
    
    post:
      tags:
        - Profissionais
      summary: Cria um novo profissional
      description: Requer autenticação como admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - usuario_id
                - especialidade_id
                - crm
              properties:
                usuario_id:
                  type: integer
                especialidade_id:
                  type: integer
                crm:
                  type: string
      responses:
        '201':
          description: Profissional criado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer

  /profissionais/{id}/horarios-disponiveis:
    get:
      tags:
        - Profissionais
      summary: Lista horários disponíveis do profissional
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: data
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Lista de horários disponíveis
          content:
            application/json:
              schema:
                type: object
                properties:
                  profissional:
                    type: object
                    properties:
                      id:
                        type: integer
                      nome:
                        type: string
                      especialidade:
                        type: string
                  data:
                    type: string
                    format: date
                  horarios_disponiveis:
                    type: array
                    items:
                      $ref: '#/components/schemas/HorarioDisponivel'

  /procedimentos:
    get:
      tags:
        - Procedimentos
      summary: Lista todos os procedimentos
      responses:
        '200':
          description: Lista de procedimentos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Procedimento'
    
    post:
      tags:
        - Procedimentos
      summary: Cria um novo procedimento
      description: Requer autenticação como admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nome
                - descricao
                - duracao
              properties:
                nome:
                  type: string
                descricao:
                  type: string
                duracao:
                  type: integer
      responses:
        '201':
          description: Procedimento criado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer

  /especialidades:
    get:
      tags:
        - Especialidades
      summary: Lista todas as especialidades
      responses:
        '200':
          description: Lista de especialidades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Especialidade'
    
    post:
      tags:
        - Especialidades
      summary: Cria uma nova especialidade
      description: Requer autenticação como admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nome
                - descricao
              properties:
                nome:
                  type: string
                descricao:
                  type: string
      responses:
        '201':
          description: Especialidade criada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer

  /agendamentos:
    get:
      tags:
        - Agendamentos
      summary: Lista todos os agendamentos
      responses:
        '200':
          description: Lista de agendamentos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agendamento'
    
    post:
      tags:
        - Agendamentos
      summary: Cria um novo agendamento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - profissional_id
                - clinica_id
                - procedimento_id
                - paciente_nome
                - paciente_telefone
                - data_agendamento
                - hora_inicio
                - hora_fim
              properties:
                profissional_id:
                  type: integer
                clinica_id:
                  type: integer
                procedimento_id:
                  type: integer
                paciente_nome:
                  type: string
                paciente_telefone:
                  type: string
                data_agendamento:
                  type: string
                  format: date
                hora_inicio:
                  type: string
                  format: time
                hora_fim:
                  type: string
                  format: time
                observacoes:
                  type: string
      responses:
        '201':
          description: Agendamento criado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer

  /agendamentos/{id}:
    get:
      tags:
        - Agendamentos
      summary: Busca um agendamento específico
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes do agendamento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agendamento'
        '404':
          description: Agendamento não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /agendamentos/{id}/confirmar:
    post:
      tags:
        - Agendamentos
      summary: Confirma um agendamento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Agendamento confirmado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Agendamento não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /agendamentos/{id}/cancelar:
    post:
      tags:
        - Agendamentos
      summary: Cancela um agendamento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Agendamento cancelado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Agendamento não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
